{"remainingRequest":"/Users/arthur/42/projects/camagru/camagru-vuejs/node_modules/babel-loader/lib/index.js!/Users/arthur/42/projects/camagru/camagru-vuejs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/arthur/42/projects/camagru/camagru-vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arthur/42/projects/camagru/camagru-vuejs/src/views/Montage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/arthur/42/projects/camagru/camagru-vuejs/src/views/Montage.vue","mtime":1627521257408},{"path":"/Users/arthur/42/projects/camagru/camagru-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1625584758294},{"path":"/Users/arthur/42/projects/camagru/camagru-vuejs/node_modules/babel-loader/lib/index.js","mtime":1625584758110},{"path":"/Users/arthur/42/projects/camagru/camagru-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1625584758294},{"path":"/Users/arthur/42/projects/camagru/camagru-vuejs/node_modules/vue-loader/lib/index.js","mtime":1625584762455}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0FycmF5IGZyb20gIi9Vc2Vycy9hcnRodXIvNDIvcHJvamVjdHMvY2FtYWdydS9jYW1hZ3J1LXZ1ZWpzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0FycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgV2ViQ2FtIH0gZnJvbSAidnVlLXdlYi1jYW0iOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgQ29udGVudFNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvY29udGVudC5zZXJ2aWNlLmpzJzsKdmFyIEFQSV9VUkwgPSAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTW9udGFnZSIsCiAgcHJvcHM6IHt9LAogIGNvbXBvbmVudHM6IHsKICAgICJ2dWUtd2ViLWNhbSI6IFdlYkNhbQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3RBcnJheTogW10sCiAgICAgIGltZzogbnVsbCwKICAgICAgY2FtZXJhOiBudWxsLAogICAgICBkZXZpY2VJZDogbnVsbCwKICAgICAgZGV2aWNlczogW10sCiAgICAgIGltYWdlUGF0aDogJycKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBheGlvcy5nZXQoQVBJX1VSTCArICcvZ2V0LWltYWdlJywge30pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICB2YXIgcG9zdCA9IHJlczsKICAgICAgX3RoaXMucG9zdEFycmF5ID0gcmVzOyAvL2NvbnNvbGUubG9nKHRoaXMuaW1nKQoKICAgICAgcmV0dXJuIHBvc3Q7CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICB1c2VybGFzdHBvc3Q6IGZ1bmN0aW9uIHVzZXJsYXN0cG9zdCgpIHsKICAgICAgLy92YXIgcG9zdCA9IENvbnRlbnRTZXJ2aWNlLmdldFBvc3QoKQogICAgICAvL2NvbnNvbGUubG9nKENvbnRlbnRTZXJ2aWNlLmdldFBvc3QoKSkKICAgICAgdmFyIHBvc3QgPSB0aGlzLmZldGNoaW1hZ2VzKCk7IC8vY29uc29sZS5sb2codGhpcy5wb3N0QXJyYXkpCgogICAgICByZXR1cm4gcG9zdDsKICAgIH0sCiAgICBkZXZpY2U6IGZ1bmN0aW9uIGRldmljZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gdGhpcy5kZXZpY2VzLmZpbmQoZnVuY3Rpb24gKG4pIHsKICAgICAgICByZXR1cm4gbi5kZXZpY2VJZCA9PT0gX3RoaXMyLmRldmljZUlkOwogICAgICB9KTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjYW1lcmE6IGZ1bmN0aW9uIGNhbWVyYShpZCkgewogICAgICB0aGlzLmRldmljZUlkID0gaWQ7CiAgICB9LAogICAgZGV2aWNlczogZnVuY3Rpb24gZGV2aWNlcygpIHsKICAgICAgdmFyIF90aGlzJGRldmljZXMgPSBfdG9BcnJheSh0aGlzLmRldmljZXMpLAogICAgICAgICAgZmlyc3QgPSBfdGhpcyRkZXZpY2VzWzBdLAogICAgICAgICAgdGFpbCA9IF90aGlzJGRldmljZXMuc2xpY2UoMSk7CgogICAgICBpZiAoZmlyc3QpIHsKICAgICAgICB0aGlzLmNhbWVyYSA9IGZpcnN0LmRldmljZUlkOwogICAgICAgIHRoaXMuZGV2aWNlSWQgPSBmaXJzdC5kZXZpY2VJZDsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25DYXB0dXJlOiBmdW5jdGlvbiBvbkNhcHR1cmUoKSB7CiAgICAgIHRoaXMuaW1nID0gdGhpcy4kcmVmcy53ZWJjYW0uY2FwdHVyZSgpOwogICAgICBDb250ZW50U2VydmljZS5zYXZlUG9zdCh0aGlzLmltZyk7CiAgICB9LAogICAgb25TdGFydGVkOiBmdW5jdGlvbiBvblN0YXJ0ZWQoc3RyZWFtKSB7fSwKICAgIG9uU3RvcHBlZDogZnVuY3Rpb24gb25TdG9wcGVkKHN0cmVhbSkge30sCiAgICBvblN0b3A6IGZ1bmN0aW9uIG9uU3RvcCgpIHsKICAgICAgdGhpcy4kcmVmcy53ZWJjYW0uc3RvcCgpOwogICAgfSwKICAgIG9uU3RhcnQ6IGZ1bmN0aW9uIG9uU3RhcnQoKSB7CiAgICAgIHRoaXMuJHJlZnMud2ViY2FtLnN0YXJ0KCk7CiAgICB9LAogICAgb25FcnJvcjogZnVuY3Rpb24gb25FcnJvcihlcnJvcikge30sCiAgICBvbkNhbWVyYXM6IGZ1bmN0aW9uIG9uQ2FtZXJhcyhjYW1lcmFzKSB7CiAgICAgIHRoaXMuZGV2aWNlcyA9IGNhbWVyYXM7CiAgICB9LAogICAgb25DYW1lcmFDaGFuZ2U6IGZ1bmN0aW9uIG9uQ2FtZXJhQ2hhbmdlKGRldmljZUlkKSB7CiAgICAgIHRoaXMuZGV2aWNlSWQgPSBkZXZpY2VJZDsKICAgICAgdGhpcy5jYW1lcmEgPSBkZXZpY2VJZDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Montage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,SAAA,MAAA,QAAA,aAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,cAAA,MAAA,gCAAA;AAEA,IAAA,OAAA,GAAA,2BAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAIA,EAAA,UAAA,EAAA;AACA,mBAAA;AADA,GAJA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,GAAA,EAAA,IAFA;AAGA,MAAA,MAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA,MAAA,OAAA,EAAA,EALA;AAMA,MAAA,SAAA,EAAA;AANA,KAAA;AAQA,GAhBA;AAiBA,EAAA,OAjBA,qBAiBA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,CAAA,OAAA,GAAA,YAAA,EAAA,EAAA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,UAAA,IAAA,GAAA,GAAA;AACA,MAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAHA,CAIA;;AACA,aAAA,IAAA;AACA,KARA;AASA,GA3BA;AA4BA,EAAA,QAAA,EAAA;AACA,IAAA,YAAA,EAAA,wBAAA;AACA;AACA;AACA,UAAA,IAAA,GAAA,KAAA,WAAA,EAAA,CAHA,CAIA;;AACA,aAAA,IAAA;AACA,KAPA;AAQA,IAAA,MAAA,EAAA,kBAAA;AAAA;;AACA,aAAA,KAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,QAAA,KAAA,MAAA,CAAA,QAAA;AAAA,OAAA,CAAA;AACA;AAVA,GA5BA;AAwCA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,gBAAA,EAAA,EAAA;AACA,WAAA,QAAA,GAAA,EAAA;AACA,KAHA;AAIA,IAAA,OAAA,EAAA,mBAAA;AACA,mCAAA,KAAA,OAAA;AAAA,UAAA,KAAA;AAAA,UAAA,IAAA;;AACA,UAAA,KAAA,EAAA;AACA,aAAA,MAAA,GAAA,KAAA,CAAA,QAAA;AACA,aAAA,QAAA,GAAA,KAAA,CAAA,QAAA;AACA;AACA;AAVA,GAxCA;AAoDA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,GAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,OAAA,EAAA;AACA,MAAA,cAAA,CAAA,QAAA,CAAA,KAAA,GAAA;AACA,KAJA;AAKA,IAAA,SALA,qBAKA,MALA,EAKA,CAAA,CALA;AAMA,IAAA,SANA,qBAMA,MANA,EAMA,CAAA,CANA;AAOA,IAAA,MAPA,oBAOA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,IAAA;AACA,KATA;AAUA,IAAA,OAVA,qBAUA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA,KAZA;AAaA,IAAA,OAbA,mBAaA,KAbA,EAaA,CAAA,CAbA;AAcA,IAAA,SAdA,qBAcA,OAdA,EAcA;AACA,WAAA,OAAA,GAAA,OAAA;AACA,KAhBA;AAiBA,IAAA,cAjBA,0BAiBA,QAjBA,EAiBA;AACA,WAAA,QAAA,GAAA,QAAA;AACA,WAAA,MAAA,GAAA,QAAA;AACA;AApBA;AApDA,CAAA","sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"form-row d-flex justify-content-center\">\n            <div class=\"col-md-12\">\n                <vue-web-cam\n                    ref=\"webcam\"\n                    :device-id=\"deviceId\"\n                    width=\"100%\"\n                    @started=\"onStarted\"\n                    @stopped=\"onStopped\"\n                    @error=\"onError\"\n                    @cameras=\"onCameras\"\n                    @camera-change=\"onCameraChange\"\n                />\n                <div class=\"row mt-2 d-flex justify-content-center\">\n                    <div class=\"col-md-4\">\n                        <label for=\"device\">Camera</label>\n                        <select\n                            v-model=\"camera\"\n                            name=\"device\"\n                            id=\"device\"\n                            class=\"form-control\"\n                        >\n                            <option>Selecione o Dispositivo</option>\n                            <option\n                                v-for=\"device in devices\"\n                                :key=\"device.deviceId\"\n                                :value=\"device.deviceId\"\n                                >{{ device.label }}</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button v-on:click=\"onCapture\">capture</button>\n        <div>\n            <template v-for=\"(post, imageindex) in postArray\">\n                \n                <img :src=\"post\" :key=\"imageindex\">\n                \n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { WebCam } from \"vue-web-cam\";\nimport axios from 'axios';\nimport ContentService from '../services/content.service.js'\n\nconst API_URL = 'http://localhost:8080/api';\n\n\nexport default {\n    name: \"Montage\",\n    props: {\n    },\n    components: {\n        \"vue-web-cam\": WebCam\n    },\n        data() {\n        return {\n            postArray: [],\n            img: null,\n            camera: null,\n            deviceId: null,\n            devices: [],\n            imagePath: ''\n        };\n    },\n    mounted() {\n        axios.get(API_URL + '/get-image',{\n        })\n        .then((res) => {\n            console.log(res)\n            var post = res\n            this.postArray = res;\n            //console.log(this.img)\n            return post\n        })\n    },\n    computed: {\n        userlastpost: function(){\n            //var post = ContentService.getPost()\n            //console.log(ContentService.getPost())\n            var post = this.fetchimages();\n            //console.log(this.postArray)\n            return post;\n        },\n        device: function() {\n            return this.devices.find(n => n.deviceId === this.deviceId);\n        }\n    },\n    watch: {\n        camera: function(id) {\n            this.deviceId = id;\n        },\n        devices: function() {\n            const [first, ...tail] = this.devices;\n            if (first) {\n                this.camera = first.deviceId;\n                this.deviceId = first.deviceId;\n            }\n        }\n    },\n    methods: {\n        onCapture() {\n            this.img = this.$refs.webcam.capture();\n            ContentService.savePost(this.img)\n        },\n        onStarted(stream) {},\n        onStopped(stream) {},\n        onStop() {\n            this.$refs.webcam.stop();\n        },\n        onStart() {\n            this.$refs.webcam.start();\n        },\n        onError(error) {},\n        onCameras(cameras) {\n            this.devices = cameras;\n        },\n        onCameraChange(deviceId) {\n            this.deviceId = deviceId;\n            this.camera = deviceId;\n        }\n    }\n};\n\n</script>\n"],"sourceRoot":"src/views"}]}